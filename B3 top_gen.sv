
top_gen.sv
// Generated by SandPiper(TM) 1.11-2021/01/28-beta from Redwood EDA.
// (Installed here: /usr/local/mono/sandpiper/distro.)
// Redwood EDA does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


`include "sandpiper_gen.vh"





//
// Signals declared top-level.
//

// For |calc$aa.
logic [3:0] CALC_aa_a1;

// For |calc$aa_s.
logic [7:0] CALC_aa_s_a1;

// For |calc$r_aa.
logic [31:0] CALC_r_aa_a0,
             CALC_r_aa_a1;



generate


   //
   // Scope: |calc
   //

      // For signal $aa, which had no assignment.
      // Assign to a random value.
      // verilator lint_save
      // verilator lint_off WIDTH
      assign CALC_aa_a1[3:0] = CALC_r_aa_a1;
      // verilator lint_restore

      // For random value for missing assignment.
      assign CALC_r_aa_a0[31:0] = $random() ^ {31'b0, clk};
      always_ff @(posedge clk) CALC_r_aa_a1[31:0] <= CALC_r_aa_a0[31:0];




endgenerate




//
// Debug Signals
//

generate

   if (1) begin : DEBUG_SIGS


      //
      // Scope: |calc
      //
      if (1) begin : \|calc 
         logic [3:0] \>@1$aa ;
         assign \>@1$aa = CALC_aa_a1;
         logic [7:0] \>@1$aa_s ;
         assign \>@1$aa_s = CALC_aa_s_a1;
      end


   end

endgenerate




generate   // This is awkward, but we need to go into 'generate' context in the line that `includes the declarations file.
